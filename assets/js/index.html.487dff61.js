"use strict";(self.webpackChunkruri=self.webpackChunkruri||[]).push([[470],{4:(e,a,i)=>{i.r(a),i.d(a,{comp:()=>l,data:()=>r});var n=i(89);const s={},l=(0,i(336).A)(s,[["render",function(e,a){const i=(0,n.g2)("RouteLink");return(0,n.uX)(),(0,n.CE)("div",null,[a[3]||(a[3]=(0,n.Fv)('<h2 id="highlights" tabindex="-1"><a class="header-anchor" href="#highlights"><span>Highlights</span></a></h2><ul><li><p><strong>Powerful Features</strong></p><ul><li>Supports chroot, unshare with pivot_root, capability control, cgroups, no_new_privs, environment/user/workdir setup, seccomp, and more.</li><li>Built-in binfmt_misc &amp; QEMU for easy multi-arch containers.</li><li>Rootless mode (requires user namespaces).</li><li>Flexible mount options: mount images/partitions, set mountpoints as read-only or rw.</li><li>Config file support.</li></ul></li><li><p><strong>Ultra-lightweight &amp; Zero Dependencies</strong></p><ul><li>Only optional <code>uidmap</code> needed for rootless mode; all other features are built-in.</li><li>Statically linked binaries for many architectures.</li><li>Very small binary size (even &lt;200k with upx), yet over 30 options.</li></ul></li><li><p><strong>Flexible &amp; Cross-platform</strong></p><ul><li>Runs on rooted Android, IoT, amd64, s390x, and more, just needs root.</li></ul></li><li><p><strong>Secure by Design</strong></p><ul><li>Rootless containers, security options, and read-only filesystem support.</li></ul></li><li><p><strong>Simple for Beginners</strong></p><ul><li>Can replace <code>chroot</code> directly; easy to use without learning every option.</li></ul><p align="center"><img src="https://github.com/Moe-hacker/ruri/raw/main/logo/rurifetch.png" alt="" style="width:75%;align:center;"></p></li></ul><h2 id="about-us" tabindex="-1"><a class="header-anchor" href="#about-us"><span>About us:</span></a></h2><p>‚ÄÉNot &quot;Why not docker&quot;, but &quot;When cannot docker&quot;.<br> ‚ÄÉruri is pronounced as <code>luli</code>, or you can call it <code>[Áë†ÁíÉ/ÁêâÁíÉ]</code> <s>(„Çã„Çä)</s> in Chinese or Japanese as well.<br> ‚ÄÉruri is acronym to Lightweight, User-friendly Linux-container Implementation.<br> ‚ÄÉruri is a powerful container implementation that runs on almost any Linux device, even with incomplete kernel configurations or minimal storage space.</p><h2 id="get-ruri" tabindex="-1"><a class="header-anchor" href="#get-ruri"><span>Get ruri</span></a></h2><p>You can get ruri binary (statically linked) for arm64, armv7, armhf, riscv64, i386, loong64, s390x, ppc64le and x86_64 devices in <a href="https://github.com/Moe-hacker/ruri/releases/" target="_blank" rel="noopener noreferrer">Release</a>. Or you can run the following command to download ruri automatically</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token builtin class-name">.</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token function">curl</span> <span class="token parameter variable">-sL</span> https://get.ruri.zip/ruri<span class="token punctuation">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>This will automatically download ruri binary to <code>./ruri</code>.</p><h1 id="example-usage" tabindex="-1"><a class="header-anchor" href="#example-usage"><span>Example Usage</span></a></h1><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line"># Run chroot container</span>\n<span class="line">  sudo ruri /tmp/alpine</span>\n<span class="line"></span>\n<span class="line"># Very simple as you can see.</span>\n<span class="line"></span>\n<span class="line"># About the capabilities</span>\n<span class="line"># Run privileged chroot container</span>\n<span class="line">  sudo ruri -p /tmp/alpine</span>\n<span class="line"></span>\n<span class="line"># If you want to run privileged chroot container,</span>\n<span class="line"># but you don&#39;t want to give the container cap_sys_chroot privileges</span>\n<span class="line">  sudo ruri -p -d cap_sys_chroot /tmp/alpine</span>\n<span class="line"></span>\n<span class="line"># If you want to run chroot container with common privileges,</span>\n<span class="line"># but you want cap_sys_admin to be kept</span>\n<span class="line">  sudo ruri -k cap_sys_admin /tmp/alpine</span>\n<span class="line"></span>\n<span class="line"># About unshare</span>\n<span class="line"># Unshare container&#39;s capability options are same with chroot.</span>\n<span class="line"># Run unshare container</span>\n<span class="line">  sudo ruri -u /tmp/alpine</span>\n<span class="line"></span>\n<span class="line"># Finally, umount the container</span>\n<span class="line">  sudo ruri -U /tmp/alpine</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="build-manually" tabindex="-1"><a class="header-anchor" href="#build-manually"><span>Build Manually</span></a></h1>',11)),(0,n.Lk)("p",null,[a[1]||(a[1]=(0,n.eW)("Ruri provides statically linked binary, but if you want to build it yourself, see ",-1)),(0,n.bF)(i,{to:"/Build.html"},{default:(0,n.k6)(()=>[...a[0]||(a[0]=[(0,n.eW)("Build",-1)])]),_:1}),a[2]||(a[2]=(0,n.eW)(".",-1))])])}]]),r=JSON.parse('{"path":"/","title":"Ruri - Lightweight, User-friendly Linux-container Implementation","lang":"en-US","frontmatter":{"home":true,"title":"Ruri - Lightweight, User-friendly Linux-container Implementation","tagline":"A zippedüì¶ Linux container runtime that zipsüöÄ","heroImage":"/images/logo.png","heroText":"ruri","actions":[{"text":"Repository","link":"https://github.com/RuriOSS/ruri","type":"primary"},{"text":"Full Usage","link":"https://github.com/RuriOSS/ruri/blob/main/doc/USAGE.md","type":"primary"}],"footer":"MIT Licensed | Copyright (c) 2022-2025 RuriOSS"},"headers":[{"level":2,"title":"Highlights","slug":"highlights","link":"#highlights","children":[]},{"level":2,"title":"About us:","slug":"about-us","link":"#about-us","children":[]},{"level":2,"title":"Get ruri","slug":"get-ruri","link":"#get-ruri","children":[]}],"git":{"updatedTime":1757747676000,"contributors":[{"name":"Nyawww","username":"Nyawww","email":"siyueba73@gmail.com","commits":1,"url":"https://github.com/Nyawww"},{"name":"Moe-hacker","username":"Moe-hacker","email":"moe-hacker@outlook.com","commits":5,"url":"https://github.com/Moe-hacker"}],"changelog":[{"hash":"69adc4ff66fca61d2e56ec9e354da092f0af35b6","time":1757747676000,"email":"moe-hacker@outlook.com","author":"Moe-hacker","message":"Gross hack because Darren doesn\'t know how to code"},{"hash":"887fc5fc277d37c82b11ca3e6961bf8ae21b6510","time":1757747407000,"email":"moe-hacker@outlook.com","author":"Moe-hacker","message":"Refactor factories, revisit visitors"},{"hash":"c98928e4119abdd7ca018333db407df621c6ed69","time":1757746894000,"email":"moe-hacker@outlook.com","author":"Moe-hacker","message":"update site"},{"hash":"abfa7a5fda4e8016d090a69ee61224c5b5d3d689","time":1757746782000,"email":"moe-hacker@outlook.com","author":"Moe-hacker","message":"update site"},{"hash":"e9e1812958e5803fada0ca2ec839be9a7df3b424","time":1757746643000,"email":"moe-hacker@outlook.com","author":"Moe-hacker","message":"update site"},{"hash":"09f7bc454e587c1c9568b3f6ba0197bf99570c11","time":1757743047000,"email":"siyueba73@gmail.com","author":"Nyawww","message":"init."}]},"filePathRelative":"README.md"}')}}]);